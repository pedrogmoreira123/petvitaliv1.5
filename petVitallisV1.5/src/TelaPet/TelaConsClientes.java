
package TelaPet;


import ClassesCadastro.CadConsultatt;
import ClassesCadastro.CadPets;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kauan
 */
public class TelaConsClientes extends javax.swing.JFrame {

    /**
     * Creates new form TelaConsClientes
     */
    public TelaConsClientes() {
        super("Cadastro de Clientes");
        initComponents();
        this.setLocationRelativeTo(null);
        setResizable(false);
        String caminhoImagem = "/icon/logo PET VITALLI.png";          
         // Carrega a imagem do ícone
        ImageIcon icon = new ImageIcon(getClass().getResource( caminhoImagem ));
        // Define o ícone da janela
        this.setIconImage(icon.getImage());  
                     CampoCpfPet.addFocusListener(new java.awt.event.FocusAdapter() {
             public void focusLost(java.awt.event.FocusEvent evt) {
             CampoDePesquisaCPFFocusLost(evt);

            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        CampoCpfPet = new javax.swing.JTextPane();
        ConsultarCpf = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        consultaBancoPets = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane2.setViewportView(CampoCpfPet);

        ConsultarCpf.setText("Consultar");
        ConsultarCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultarCpfActionPerformed(evt);
            }
        });

        consultaBancoPets.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nome", "Cpf", "Número", "Nome do Pet", "Idade", "Especie - Raça", "Sexo"
            }
        ));
        jScrollPane1.setViewportView(consultaBancoPets);

        jLabel1.setText("Digite o CPF");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ConsultarCpf))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 777, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ConsultarCpf)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel1)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ConsultarCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultarCpfActionPerformed
 
    }//GEN-LAST:event_ConsultarCpfActionPerformed
private void CampoDePesquisaCPFFocusLost(java.awt.event.FocusEvent evt) {
        
         String cpf = CampoCpfPet.getText().trim();

    if (cpf.isEmpty()) {
        // Se o campo de pesquisa estiver vazio, mostramos todos os registros
        MostrarBanco();
    } else {
        // Caso contrário, pesquisamos por um CPF específico
        ProcuraCpf(cpf);
        }
    }        

  
    private void ProcuraCpf(String cpf) {
            CadPets pet = new CadPets();
            CadPets rs = pet.CarregaCpf(cpf);

            if (rs != null) {
                DefaultTableModel model = new DefaultTableModel();
                model.addColumn("Nome");
                model.addColumn("Cpf");
                model.addColumn("Número");
                model.addColumn("Nome do Pet");
                model.addColumn("Idade");
                model.addColumn("Especie - Raça");
                model.addColumn("Sexo");

            String nome = rs.getNome();
            String cpfCli = rs.getCpf();
            String num = rs.getNumero();
            String nomePet = rs.getNomePet();
            String idade = rs.getIdade();
            String especieRaca = rs.getraca();
            String sexo = rs.getSexo();
            
            model.addRow(new Object[]{nome, cpfCli, num, nomePet, idade, especieRaca, sexo});


                consultaBancoPets.setModel(model);
            } else {
                JOptionPane.showMessageDialog(null, "CPF não encontrado.");
            }
        }

        private void MostrarBanco() {
            
            CadPets pet = new CadPets();
            ResultSet rs = pet.TodosDados();

            if (rs != null) {
                DefaultTableModel model = new DefaultTableModel();
                model.addColumn("Nome");
                model.addColumn("Cpf");
                model.addColumn("Número");
                model.addColumn("Nome do Pet");
                model.addColumn("Idade");
                model.addColumn("Especie - Raça");
                model.addColumn("Sexo");

                try {
                    while (rs.next()) {
                        String nome = rs.getString("nome");
                        String cpfcli = rs.getString("cpf");
                        String nomepet = rs.getString("nomepet");
                        String num = rs.getString("número");
                        String idade = rs.getString("idade");
                        String especieRaca = rs.getString("especie_raça");
                        String sexo = rs.getString("sexo");
                        
                        model.addRow(new Object[]{nome, cpfcli, nomepet, num, idade, especieRaca, sexo});
                    }
                } catch (SQLException e) {
                    e.printStackTrace();
                }

                consultaBancoPets.setModel(model);
            } else {
                JOptionPane.showMessageDialog(null, "Não há registros no banco de dados.");
            }
        }
        
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaConsClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaConsClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaConsClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaConsClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaConsClientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane CampoCpfPet;
    private javax.swing.JButton ConsultarCpf;
    private javax.swing.JTable consultaBancoPets;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
