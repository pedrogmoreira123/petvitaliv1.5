package TelaPet;

import ClassesCadastro.CadPets;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public class TelaCadPet extends javax.swing.JFrame {

    /**
     * Creates new form TelaCadAnimais
     */
    public TelaCadPet() {
        super("Cadastro de Pet");
        initComponents();
        this.setLocationRelativeTo(null);
        setResizable(true);
        String caminhoImagem = "/icon/logo 100.png";        
         // Carrega a imagem do ícone
        ImageIcon icon = new ImageIcon(getClass().getResource( caminhoImagem ));
        // Define o ícone da janela
        this.setIconImage(icon.getImage());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        VoltarMEnu = new javax.swing.JButton();
        txtSexoPet = new javax.swing.JComboBox<>();
        BotaoMaisPet = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        SalvarPet = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtRacaPet = new javax.swing.JTextField();
        txtIdadePet = new javax.swing.JTextField();
        txtNomePet = new javax.swing.JTextField();
        txtNumTutor = new javax.swing.JTextField();
        txtCpfTutor = new javax.swing.JTextField();
        txtNomeTutor = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));

        jPanel1.setBackground(new java.awt.Color(255, 183, 101));
        jPanel1.setForeground(new java.awt.Color(0, 0, 0));

        VoltarMEnu.setBackground(new java.awt.Color(255, 183, 101));
        VoltarMEnu.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        VoltarMEnu.setForeground(new java.awt.Color(0, 0, 0));
        VoltarMEnu.setText("Fechar");
        VoltarMEnu.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        VoltarMEnu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VoltarMEnuActionPerformed(evt);
            }
        });

        txtSexoPet.setEditable(true);
        txtSexoPet.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Macho", "Fêmea" }));
        txtSexoPet.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtSexoPet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSexoPetActionPerformed(evt);
            }
        });

        BotaoMaisPet.setBackground(new java.awt.Color(255, 183, 101));
        BotaoMaisPet.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        BotaoMaisPet.setForeground(new java.awt.Color(0, 0, 0));
        BotaoMaisPet.setText("Limpar");
        BotaoMaisPet.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BotaoMaisPet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoMaisPetActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Sexo");

        jLabel9.setBackground(new java.awt.Color(255, 183, 101));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logo 100.png"))); // NOI18N

        SalvarPet.setBackground(new java.awt.Color(255, 183, 101));
        SalvarPet.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        SalvarPet.setForeground(new java.awt.Color(0, 0, 0));
        SalvarPet.setText("Salvar");
        SalvarPet.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        SalvarPet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalvarPetActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Espécie - Raça");

        txtRacaPet.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtRacaPet.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));
        txtRacaPet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRacaPetActionPerformed(evt);
            }
        });

        txtIdadePet.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtIdadePet.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));

        txtNomePet.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtNomePet.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));

        txtNumTutor.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtNumTutor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));

        txtCpfTutor.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtCpfTutor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), java.awt.Color.white, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));

        txtNomeTutor.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtNomeTutor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        txtNomeTutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeTutorActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Idade");

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Nome");

        jLabel5.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Número de contato");

        jLabel7.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("CPF do Tutor");

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Nome Tutor");

        jLabel11.setFont(new java.awt.Font("Arial Black", 3, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Cadastro de Pet");
        jLabel11.setToolTipText("");
        jLabel11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0)));
        jLabel11.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(VoltarMEnu, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(BotaoMaisPet, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(SalvarPet, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(31, 31, 31))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGap(75, 75, 75)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                                    .addComponent(txtNomeTutor, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtCpfTutor, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(96, 96, 96)
                                    .addComponent(txtSexoPet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtRacaPet)
                                        .addComponent(txtNomePet, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                                        .addComponent(txtNumTutor)
                                        .addComponent(txtIdadePet)))))))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(8, Short.MAX_VALUE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomeTutor, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCpfTutor, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumTutor, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomePet, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdadePet, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtRacaPet, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSexoPet, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VoltarMEnu, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotaoMaisPet, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SalvarPet, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SalvarPetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalvarPetActionPerformed
        // TODO add your handling code here:
        
        //Variavel pet para conversar com a classe
        CadPets pet = new CadPets();
        
        
        String NumPet, IdadePet, CpfTutor; 
        
        //Nome do tutor, nome e raça são preaticamente iguais
        //Só muda o campo de onde vão puxar as Informações(getText)
        //E aonde vão setar a informação(setNome)(setRaca)
        
        if (!txtNomeTutor.getText().isEmpty()) {
            pet.setNome(txtNomeTutor.getText());
        }else{
            JOptionPane.showMessageDialog(null, "Campo do tutor inválido!");
        }
        
        if (!txtNomePet.getText().isEmpty()) {
            pet.setNomePet(txtNomePet.getText());
        } else {
            JOptionPane.showMessageDialog(null, "Campo do Nome do pet esta inválido!");

        }
        
        if (!txtRacaPet.getText().isEmpty()) {
            pet.setraca(txtRacaPet.getText());
        } else {
            JOptionPane.showMessageDialog(null, "Campo do raça inválido!");

        }
        
        //Para as informações em número o codigo é um pouco diferente
        //Tem a mesma base, mas precia de mais comandos
        //Aqui usaremos as variaveis que criamos la em cima como (IdadePet)
        //E aqui tambem mudamos a varievel de String para Int!!
        
        if (!txtIdadePet.getText().isEmpty()) {
        try {
            IdadePet =(txtIdadePet.getText());
            pet.setIdade(IdadePet);
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Campo idade Inválido");
            //mostra para o usuario aonde está errado
        }
           } else {
        JOptionPane.showMessageDialog(null, "Campo idade Inválido");
            //mostra para o usuario aonde está errado
          }
        
        if (!txtNumTutor.getText().isEmpty()) {
        try {
            NumPet =(txtNumTutor.getText());
         
            pet.setNumero(NumPet);
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Campo número Inválido");
            // mostra para o usuario aonde está errado
        }
           } else {
        JOptionPane.showMessageDialog(null, "Campo número Inválido");
            //  mostra para o usuario aonde está errado
          }
        
        if (!txtCpfTutor.getText().isEmpty()) {
        try {
            CpfTutor =(txtCpfTutor.getText());
         
            pet.setCpf(CpfTutor);
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Campo CPF do Tutor Inválido");
            // mostra para o usuario aonde está errado
        }
           } else {
        JOptionPane.showMessageDialog(null, "Campo CPF do Tutor Inválido");
            //  mostra para o usuario aonde está errado
          }
        if (!txtSexoPet.getSelectedItem().toString().isEmpty()) {
            pet.setSexo(txtSexoPet.getSelectedItem().toString());
        }else{
             JOptionPane.showMessageDialog(null, "Campo do Sexo do pet esta inválido!");
        }
        
        
        
        //Isso aqui em baixo é só para poder fazer aquele negocio de só aceitar número funcionar certo
        
        String textIdaPet = txtIdadePet.getText();
        String textNumPet = txtNumTutor.getText();
        String textCpfTutor = txtCpfTutor.getText();
        
        //Define uma expressão regular para verificar se o texto contém apenas números
        String regexNumerico = "\\d+";  
         
        // Cria um padrão regex 
        //Pattern é uma classe em Java que compila uma expressão regular em um objeto de padrão.
        //Uma expressão regular é uma sequência de caracteres que define um padrão de busca.
        Pattern pattern = Pattern.compile(regexNumerico);
         
        // Cria um Matcher para aplicar o padrão ao texto do campo
        //Matcher é uma classe que realiza a correspondência de padrões em uma sequência de caracteres. 
        //Ela é usada para aplicar um padrão regex a uma determinada string e encontrar todas as ocorrências desse padrão na string.
         Matcher matcherIdade = pattern.matcher(textIdaPet);
         Matcher matcherNumTutor = pattern.matcher(textNumPet);
         Matcher matcherCpfTutor = pattern.matcher(textCpfTutor);
        
        //Aqui basicamente é só para confirmar se todos os dados foram preenchidos
        //Se tiverem sido preechidos corretamente ai finaliza o cadrastro
        
        if (!txtNomeTutor.getText().isEmpty()
            && !txtNomePet.getText().isEmpty()
            && !txtRacaPet.getText().isEmpty()
            && !txtIdadePet.getText().isEmpty()
            && !txtNumTutor.getText().isEmpty()
            && !txtCpfTutor.getText().isEmpty()
            && !txtSexoPet.getSelectedItem().toString().isEmpty()
            && matcherIdade.matches()
            && matcherNumTutor.matches()
            && matcherCpfTutor.matches())  { 
            pet.Inserir();
            txtNomePet.setText("");
            txtIdadePet.setText("");
            txtRacaPet.setText("");
 
        }else{
             JOptionPane.showMessageDialog(null, "Preencha todos os campos corretamente");   
        }     
        
    }//GEN-LAST:event_SalvarPetActionPerformed

    private void VoltarMEnuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VoltarMEnuActionPerformed
         this.dispose();
    }//GEN-LAST:event_VoltarMEnuActionPerformed

    private void BotaoMaisPetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoMaisPetActionPerformed
 

//Limpa dados dos pets
    txtNomeTutor.setText("");
    txtCpfTutor.setText("");
    txtNumTutor.setText("");
    txtNomePet.setText("");
    txtIdadePet.setText("");
    txtRacaPet.setText("");



// Coleta os dados dos campos

   /* String nomePet = txtNomePet.getText();
    String idadePet = txtIdadePet.getText();
    String racaPet = txtRacaPet.getText();
    String cpfTutor = txtCpfTutor.getText();

    // Verifica se todos os campos estão preenchidos
    if (nomePet.isEmpty() || idadePet.isEmpty() || racaPet.isEmpty() || cpfTutor.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Preencha todos os campos antes de adicionar um novo animal de estimação.");
        return;
    }

    // Insere os dados do novo animal de estimação no banco de dados
    CadPets pet = new CadPets();
    pet.setNomePet(nomePet);
    pet.setIdade(idadePet);
    pet.setraca(racaPet);
    pet.Inserir();

    // Limpa os campos para adicionar um novo animal de estimação
    txtNomePet.setText("");
    txtIdadePet.setText("");
    txtRacaPet.setText("");
      */         
        // TODO add your handling code here:
    }//GEN-LAST:event_BotaoMaisPetActionPerformed

    private void txtSexoPetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSexoPetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSexoPetActionPerformed

    private void txtNomeTutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeTutorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeTutorActionPerformed

    private void txtRacaPetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRacaPetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRacaPetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
       

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCadPet().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotaoMaisPet;
    private javax.swing.JButton SalvarPet;
    private javax.swing.JButton VoltarMEnu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtCpfTutor;
    private javax.swing.JTextField txtIdadePet;
    private javax.swing.JTextField txtNomePet;
    private javax.swing.JTextField txtNomeTutor;
    private javax.swing.JTextField txtNumTutor;
    private javax.swing.JTextField txtRacaPet;
    private javax.swing.JComboBox<String> txtSexoPet;
    // End of variables declaration//GEN-END:variables
}
