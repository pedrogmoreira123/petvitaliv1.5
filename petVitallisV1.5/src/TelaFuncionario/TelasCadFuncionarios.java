    package TelaFuncionario;

import ClassesCadastro.CadConsultatt;
import ClassesCadastro.CadFuncionario;
import TelasLogin.TelaMenu;
import java.awt.event.FocusEvent;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;

import javax.swing.JOptionPane;

public class TelasCadFuncionarios extends javax.swing.JFrame {

    /**
     * Creates new form TelasCadFuncionarios
     */
    public TelasCadFuncionarios() {
        super("Cadastro de Funcionarios");
        initComponents();
        setResizable(false);
        this.setLocationRelativeTo(null);
        String caminhoImagem = "/icon/logo PET VITALLI.png";        
         // Carrega a imagem do ícone
        ImageIcon icon = new ImageIcon(getClass().getResource( caminhoImagem ));
        // Define o ícone da janela
        this.setIconImage(icon.getImage());
        
            cpfFuncionario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
            cpfFuncionarioFocusLost(evt);
            
                }
            });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BotaoCadFuncionario = new javax.swing.JButton();
        BotaoConsultarFuncionario = new javax.swing.JButton();
        nomeFuncionario = new javax.swing.JTextField();
        nomefun = new javax.swing.JLabel();
        rgfun = new javax.swing.JLabel();
        rgFuncionario = new javax.swing.JTextField();
        cpffun = new javax.swing.JLabel();
        cpfFuncionario = new javax.swing.JTextField();
        datefun = new javax.swing.JLabel();
        dataNasFuncionario = new javax.swing.JTextField();
        endereçofun = new javax.swing.JLabel();
        enderecoFuncionario = new javax.swing.JTextField();
        numeroresidenciafun = new javax.swing.JLabel();
        residenciaFuncionario = new javax.swing.JTextField();
        pisfun = new javax.swing.JLabel();
        pisFuncionario = new javax.swing.JTextField();
        cepfun = new javax.swing.JLabel();
        cepFuncionario = new javax.swing.JTextField();
        BotaoVoltarMenu = new javax.swing.JButton();
        BotaoAlterar = new javax.swing.JButton();
        CargoFun = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        BotaoCadFuncionario.setText("Novo Cadastro");
        BotaoCadFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoCadFuncionarioActionPerformed(evt);
            }
        });

        BotaoConsultarFuncionario.setText("Consultar Cadastro");
        BotaoConsultarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoConsultarFuncionarioActionPerformed(evt);
            }
        });

        nomeFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeFuncionarioActionPerformed(evt);
            }
        });

        nomefun.setText("Nome");

        rgfun.setText("RG");

        rgFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rgFuncionarioActionPerformed(evt);
            }
        });

        cpffun.setText("CPF");

        cpfFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpfFuncionarioActionPerformed(evt);
            }
        });

        datefun.setText("Data de Nascimento");

        dataNasFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataNasFuncionarioActionPerformed(evt);
            }
        });

        endereçofun.setText("Endereço");

        enderecoFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enderecoFuncionarioActionPerformed(evt);
            }
        });

        numeroresidenciafun.setText("Numero da Residencia");

        residenciaFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                residenciaFuncionarioActionPerformed(evt);
            }
        });

        pisfun.setText("PIS");

        pisFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pisFuncionarioActionPerformed(evt);
            }
        });

        cepfun.setText("CEP");

        cepFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cepFuncionarioActionPerformed(evt);
            }
        });

        BotaoVoltarMenu.setText("Voltar");
        BotaoVoltarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoVoltarMenuActionPerformed(evt);
            }
        });

        BotaoAlterar.setText("Alterar");
        BotaoAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoAlterarActionPerformed(evt);
            }
        });

        CargoFun.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Veterinário", "Recepcionista" }));
        CargoFun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CargoFunActionPerformed(evt);
            }
        });

        jLabel1.setText("Cargos Funcionarios");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nomefun)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(nomeFuncionario, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                        .addComponent(cpffun, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cpfFuncionario, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(datefun)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(pisFuncionario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(rgFuncionario, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rgfun, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dataNasFuncionario, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(pisfun)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE))))
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cepfun)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(enderecoFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(endereçofun)
                                    .addComponent(numeroresidenciafun)))
                            .addComponent(cepFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(residenciaFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BotaoConsultarFuncionario, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(BotaoAlterar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(BotaoCadFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CargoFun, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(130, 130, 130)
                        .addComponent(BotaoVoltarMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomefun)
                    .addComponent(endereçofun))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enderecoFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotaoCadFuncionario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cpffun)
                    .addComponent(numeroresidenciafun))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cpfFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(residenciaFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotaoConsultarFuncionario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rgfun)
                    .addComponent(cepfun))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rgFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cepFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotaoAlterar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(datefun)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataNasFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotaoVoltarMenu)
                    .addComponent(CargoFun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pisfun)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pisFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotaoCadFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoCadFuncionarioActionPerformed
                
        CadFuncionario funcionario = new CadFuncionario();
  
               
    if (!nomeFuncionario.getText().isEmpty()) {
        funcionario.setNome(nomeFuncionario.getText());
    } else {
        JOptionPane.showMessageDialog(null, "Campo Nome Inválido");
    }
        
    if (!enderecoFuncionario.getText().isEmpty()) {
        funcionario.setEndereco(enderecoFuncionario.getText());
    } else {
        JOptionPane.showMessageDialog(null, "Campo Endereço Inválido");
    }
        
    if (!cpfFuncionario.getText().isEmpty()) {
        funcionario.setCpf(cpfFuncionario.getText());
    } else {
        JOptionPane.showMessageDialog(null, "Campo CPF Inválido");
    }
        
    if (!rgFuncionario.getText().isEmpty()) {
        funcionario.setRg(rgFuncionario.getText());
    } else {
        JOptionPane.showMessageDialog(null, "Campo RG Inválido");
    }
        
    if (!cepFuncionario.getText().isEmpty()) {
        funcionario.setCep(cepFuncionario.getText());
    } else {
        JOptionPane.showMessageDialog(null, "Campo CEP Inválido");
    }
        
    if (!pisFuncionario.getText().isEmpty()) {
        funcionario.setPis(pisFuncionario.getText());
    } else {
        JOptionPane.showMessageDialog(null, "Campo PIS Inválido");
    }
        
    if (!dataNasFuncionario.getText().isEmpty()) {
        funcionario.setDataDeNascimento(dataNasFuncionario.getText());
    } else {
        JOptionPane.showMessageDialog(null, "Campo Data de Nascimento Inválido");
    }
        
    if (!residenciaFuncionario.getText().isEmpty()) {
        funcionario.setNumeroDaResidencia(residenciaFuncionario.getText());
    } else {
        JOptionPane.showMessageDialog(null, "Campo Número de Residência Inválido");
    }
        
    if (!CargoFun.getSelectedItem().toString().isEmpty()) {
        funcionario.setCargoFun(CargoFun.getSelectedItem().toString());
    } else {
        JOptionPane.showMessageDialog(null, "Campo de Cargo Inválido"); 
    }
    
        String NomeFun = nomeFuncionario.getText();
        String RgFun = rgFuncionario.getText();
        String CepFun = cepFuncionario.getText();
        String PisFun = pisFuncionario.getText();
        String DataNasFun = dataNasFuncionario.getText();
        String NumResFun = residenciaFuncionario.getText();
        String CpfFun = cpfFuncionario.getText();
        String Cargofun = (String) CargoFun.getSelectedItem();
        String enderecofun = enderecoFuncionario.getText();
        
        
        JOptionPane.showMessageDialog(this, """
                                            Cadastrado com Sucesso:
                                            
                                            -Nome Funcionario: """ + NomeFun + "\n"
            + "-CPF Funcionario: " + CpfFun + "\n"                                        
            + "-RG Funcionario: " + RgFun + "\n"
            + "-Data de Nascimento Funcionario: " + DataNasFun + "\n"
            + "-Pis do Funcionario: " + PisFun + "\n"
            + "-Endereco do Funcionario: " + enderecofun + "\n"
            + "-Cep Funcionario:  " + CepFun  + "\n"
            + "-Numero da residencia Funcionario: " + NumResFun + "\n"
            + "-Cargo Funcionario: " + Cargofun);
       
        
            funcionario.atualizareInserirFuncionario();
             
             
        
    }//GEN-LAST:event_BotaoCadFuncionarioActionPerformed

    private void dataNasFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataNasFuncionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataNasFuncionarioActionPerformed

    private void BotaoVoltarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoVoltarMenuActionPerformed
        dispose(); 
    }//GEN-LAST:event_BotaoVoltarMenuActionPerformed

    private void nomeFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeFuncionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeFuncionarioActionPerformed

    private void BotaoConsultarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoConsultarFuncionarioActionPerformed
        
        TelaConsFuncionarios CadProd = new TelaConsFuncionarios ();
        CadProd.setVisible(true);
        
    }//GEN-LAST:event_BotaoConsultarFuncionarioActionPerformed

    private void cepFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cepFuncionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cepFuncionarioActionPerformed

    private void cpfFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpfFuncionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpfFuncionarioActionPerformed
    
    private void cpfFuncionarioFocusLost(java.awt.event.FocusEvent evt) {
        
    String cpf = cpfFuncionario.getText();
    if (!cpf.isEmpty()) {
        CadFuncionario funcionario = new CadFuncionario();
        funcionario = funcionario.lerCPF(cpf);
        if (funcionario != null) {
            
            cpfFuncionario.setText(funcionario.getCpf());
            nomeFuncionario.setText(funcionario.getNome());
            rgFuncionario.setText(funcionario.getRg());
            dataNasFuncionario.setText(funcionario.getDataDeNascimento());
            pisFuncionario.setText(funcionario.getPis());
            enderecoFuncionario.setText(funcionario.getEndereco());
            residenciaFuncionario.setText(funcionario.getNumeroDaResidencia());
            cepFuncionario.setText(funcionario.getCep());
            CargoFun.setSelectedItem(funcionario.getCargoFun());
     
        } else {
            JOptionPane.showMessageDialog(null, "CPF não encontrado.");
            }
        }
    }
    private void rgFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rgFuncionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rgFuncionarioActionPerformed

    private void pisFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pisFuncionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pisFuncionarioActionPerformed

    private void enderecoFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enderecoFuncionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enderecoFuncionarioActionPerformed

    private void residenciaFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_residenciaFuncionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_residenciaFuncionarioActionPerformed

    private void BotaoAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoAlterarActionPerformed
        TelaConsFuncionarios CadProd = new TelaConsFuncionarios ();
        CadProd.setVisible(true);
      
                    
        CadFuncionario funcionario = new CadFuncionario();
  
               
    if (!nomeFuncionario.getText().isEmpty()) {
        funcionario.setNome(nomeFuncionario.getText());
    } else {
        JOptionPane.showMessageDialog(null, "Campo Nome Inválido");
    }
        
    if (!enderecoFuncionario.getText().isEmpty()) {
        funcionario.setEndereco(enderecoFuncionario.getText());
    } else {
        JOptionPane.showMessageDialog(null, "Campo Endereço Inválido");
    }
        
    if (!cpfFuncionario.getText().isEmpty()) {
        funcionario.setCpf(cpfFuncionario.getText());
    } else {
        JOptionPane.showMessageDialog(null, "Campo CPF Inválido");
    }
        
    if (!rgFuncionario.getText().isEmpty()) {
        funcionario.setRg(rgFuncionario.getText());
    } else {
        JOptionPane.showMessageDialog(null, "Campo RG Inválido");
    }
        
    if (!cepFuncionario.getText().isEmpty()) {
        funcionario.setCep(cepFuncionario.getText());
    } else {
        JOptionPane.showMessageDialog(null, "Campo CEP Inválido");
    }
        
    if (!pisFuncionario.getText().isEmpty()) {
        funcionario.setPis(pisFuncionario.getText());
    } else {
        JOptionPane.showMessageDialog(null, "Campo PIS Inválido");
    }
        
    if (!dataNasFuncionario.getText().isEmpty()) {
        funcionario.setDataDeNascimento(dataNasFuncionario.getText());
    } else {
        JOptionPane.showMessageDialog(null, "Campo Data de Nascimento Inválido");
    }
        
    if (!residenciaFuncionario.getText().isEmpty()) {
        funcionario.setNumeroDaResidencia(residenciaFuncionario.getText());
    } else {
        JOptionPane.showMessageDialog(null, "Campo Número de Residência Inválido");
    }
        
    if (!CargoFun.getSelectedItem().toString().isEmpty()) {
        funcionario.setCargoFun(CargoFun.getSelectedItem().toString());
    } else {
        JOptionPane.showMessageDialog(null, "Campo de Cargo Inválido"); 
    }
    
    JOptionPane.showMessageDialog(this, "Atualizado com Sucesso:\n\n" +
      
                "-Cep Funcionario: " + funcionario.getCep() + "\n" +
                "-Numero da residencia Funcionario: " + funcionario.getNumeroDaResidencia() + "\n" +
                "-Cargo Funcionario: " + funcionario.getCargoFun());
        
        funcionario.atualizarFuncionario();
        
     
       
    }//GEN-LAST:event_BotaoAlterarActionPerformed

    private void CargoFunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CargoFunActionPerformed
        
        
        
    }//GEN-LAST:event_CargoFunActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelasCadFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelasCadFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelasCadFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelasCadFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelasCadFuncionarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotaoAlterar;
    private javax.swing.JButton BotaoCadFuncionario;
    private javax.swing.JButton BotaoConsultarFuncionario;
    private javax.swing.JButton BotaoVoltarMenu;
    private javax.swing.JComboBox<String> CargoFun;
    private javax.swing.JTextField cepFuncionario;
    private javax.swing.JLabel cepfun;
    private javax.swing.JTextField cpfFuncionario;
    private javax.swing.JLabel cpffun;
    private javax.swing.JTextField dataNasFuncionario;
    private javax.swing.JLabel datefun;
    private javax.swing.JTextField enderecoFuncionario;
    private javax.swing.JLabel endereçofun;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField nomeFuncionario;
    private javax.swing.JLabel nomefun;
    private javax.swing.JLabel numeroresidenciafun;
    private javax.swing.JTextField pisFuncionario;
    private javax.swing.JLabel pisfun;
    private javax.swing.JTextField residenciaFuncionario;
    private javax.swing.JTextField rgFuncionario;
    private javax.swing.JLabel rgfun;
    // End of variables declaration//GEN-END:variables

    private static class Cadfuncionario {

        public Cadfuncionario() {
        }
    }
}
